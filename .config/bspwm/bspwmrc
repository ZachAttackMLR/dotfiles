#!/bin/sh

# if refreshing bspwm, remove all previous rules to prevent doubling up
bspc rule -r "*"

#if [ -x $HOME/.local/bin/dual_monitor ]; then
#  dual_monitor
#fi

# More icons... some change when uncommeted.... FIXME
#         ﲹ                                 溜
#                       溜 ﴃ
# Starting up workspaces on both monitors
# TODO fix this using below loop and for multiple machines

if [[ $(hostname) == 'cairhein' ]]; then
  bspc monitor eDP-1 -d   
  bspc monitor DP-1-3 -d    
  bspc monitor DP-3 -d   溜 
  bspc desktop -f 4
elif [[ $(hostname) == 'sheinar' ]]; then
  bspc monitor DP-0 -d     
  bspc monitor HDMI-0 -d  6    
  bspc desktop -f 1
fi

# Look for a non-laptop monitor, and use it by default.
# If there's nothing else, we use the laptop screen (LVDS)
#mainmonitor="$(bspc query --monitors --names | grep -v eDP1 | head -n 1)"
#mainmonitor="$(bspc query --monitors --names)"
#if ! echo "$mainmonitor" | grep LVDS >/dev/null 2>&1; then
#    xrandr --output "$mainmonitor" --auto --output LVDS1 --off
#fi

bspc config border_width 3
bspc config window_gap 5
bspc config top_padding 23

# config stuff that I'm unsure about
# bspc config split_ratio 0.52 # not sure what this does so commented out
bspc config borderless_monocle true
bspc config gapless_monocle true

# window rules
# bspc rule -a Sxiv:\* state=floating
bspc rule -a "VirtualBox Manager" desktop=^3
bspc rule -a "Microsoft Teams - Preview" desktop=^5
bspc rule -a "Toggl Desktop" desktop=^7
bspc rule -a "firefox" desktop=^8
bspc rule -a "Brave-browser" desktop=^9
bspc rule -a "VirtualBoxVM" desktop=^11

# TODO: Figure out how to properly configure/use this dropdown stuff
#dropdownname="dropdown"
#bspc query -N -n .hidden >/dev/null || setsid -f "$TERMINAL" -n "$dropdownname" -e dropdown >/dev/null 2>&1
#bspc rule -a St:$dropdownname hidden=on
#bspc rule -a St:$dropdownname sticky=on
#bspc rule -a St:$dropdownname state=floating
#bspc config external_rules_command "$(which floaters)"

# Add swallowing
pgrep bspswallow || bspswallow &
